{"version":3,"file":"shadow-root.js","sourceRoot":"","sources":["../../../src/test/test-utils/shadow-root.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AACH,OAAO,EAAC,MAAM,EAAC,MAAM,2BAA2B,CAAC;AAEjD;;GAEG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,MAAe,EAAE,OAAgB,EAAE,EAAE;IACpE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;QACvB,OAAO,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;KACtC;IACD,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,UAAW,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC,CAAC,CAAC;AACtE,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {render} from '../../lib/shady-render.js';\n\n/**\n * A helper for creating a shadowRoot on an element.\n */\nexport const renderShadowRoot = (result: unknown, element: Element) => {\n  if (!element.shadowRoot) {\n    element.attachShadow({mode: 'open'});\n  }\n  render(result, element.shadowRoot!, {scopeName: element.localName});\n};\n"]}