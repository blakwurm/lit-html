{"version":3,"file":"live_test.js","sourceRoot":"","sources":["../../../src/test/directives/live_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AAEH,sEAAsE;AACtE,qEAAqE;AAErE,OAAO,EAAC,IAAI,EAAC,MAAM,0BAA0B,CAAC;AAC9C,OAAO,EAAC,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAC3C,OAAO,EAAC,IAAI,EAAC,MAAM,mBAAmB,CAAC;AAEvC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,uDAAuD;AAEvD,MAAM,UAAW,SAAQ,WAAW;IAApC;;QAEE,cAAS,GAAG,CAAC,CAAC;IAUhB,CAAC;IARC,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,CAAC,CAAC,CAAmB;QACvB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;CACF;AACD,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AAEjD,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE;IACjB,IAAI,SAAyB,CAAC;IAE9B,KAAK,CAAC,GAAG,EAAE;QACT,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE;QACvB,IAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC5B,MAAM,EAAE,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAA,kBAAkB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YAC1E,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,EAAE,GAAG,SAAS,CAAC,iBAAqC,CAAC;YAC3D,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;YACf,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC9C,MAAM,EAAE,GAAG,CAAC,CAAS,EAAE,EAAE,CACrB,MAAM,CAAC,IAAI,CAAA,kBAAkB,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YAC1D,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,EAAE,GAAG,SAAS,CAAC,iBAAqC,CAAC;YAC3D,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;YACf,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAC/C,MAAM,EAAE,GAAG,CAAC,CAAS,EAAE,EAAE,CACrB,MAAM,CAAC,IAAI,CAAA,oBAAoB,IAAI,CAAC,CAAC,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;YAC1E,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,EAAE,GAAG,SAAS,CAAC,iBAA+B,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAC9B,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE;QACvB,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAC/C,MAAM,EAAE,GAAG,CAAC,CAAS,EAAE,EAAE,CACrB,MAAM,CAAC,IAAI,CAAA,eAAe,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YACvD,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,EAAE,GAAG,SAAS,CAAC,iBAAmC,CAAC;YACzD,EAAE,CAAC,SAAS,GAAG,GAAG,CAAA;YAClB,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACtD,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,CAAC,OAAO,EAAE,EAAE;gBAChD,aAAa,IAAI,OAAO,CAAC,MAAM,CAAC;YAClC,CAAC,CAAC,CAAC;YACH,MAAM,EAAE,GAAG,CAAC,CAAS,EAAE,EAAE,CACrB,MAAM,CAAC,IAAI,CAAA,WAAW,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YACzD,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,EAAE,GAAG,SAAS,CAAC,iBAA+B,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YAExC,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;YAEzC,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YAE/B,EAAE,CAAC,GAAG,CAAC,CAAC;YACR,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CACA,8DAA8D,EAC9D,KAAK,IAAI,EAAE;QACT,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,CAAC,OAAO,EAAE,EAAE;YAChD,aAAa,IAAI,OAAO,CAAC,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,MAAM,EAAE,GAAG,CAAC,CAAS,EAAE,EAAE,CACrB,MAAM,CAAC,IAAI,CAAA,WAAW,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,EAAE,GAAG,SAAS,CAAC,iBAA+B,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QAExC,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;QAEzC,EAAE,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEP,KAAK,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC/B,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACvD,MAAM,EAAE,GAAG,CAAC,CAAU,EAAE,EAAE,CACtB,MAAM,CAAC,IAAI,CAAA,iBAAiB,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YAE/D,EAAE,CAAC,IAAI,CAAC,CAAC;YACT,MAAM,EAAE,GAAG,SAAS,CAAC,iBAAmC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;YAE5C,EAAE,CAAC,IAAI,CAAC,CAAC;YACT,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;YAE5C,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;YAE9C,EAAE,CAAC,IAAI,CAAC,CAAC;YACT,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC9D,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,CAAC,OAAO,EAAE,EAAE;gBAChD,aAAa,IAAI,OAAO,CAAC,MAAM,CAAC;YAClC,CAAC,CAAC,CAAC;YACH,MAAM,EAAE,GAAG,CAAC,CAAU,EAAE,EAAE,CACtB,MAAM,CAAC,IAAI,CAAA,iBAAiB,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YAE/D,EAAE,CAAC,IAAI,CAAC,CAAC;YACT,MAAM,EAAE,GAAG,SAAS,CAAC,iBAA+B,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;YAE5C,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;YAEzC,EAAE,CAAC,KAAK,CAAC,CAAC;YACV,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YAE/B,EAAE,CAAC,KAAK,CAAC,CAAC;YACV,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2020 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport {live} from '../../directives/live.js';\nimport {render} from '../../lib/render.js';\nimport {html} from '../../lit-html.js';\n\nconst assert = chai.assert;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nclass LiveTester extends HTMLElement {\n  _x?: string;\n  _setCount = 0;\n\n  get x(): string|undefined {\n    return this._x;\n  }\n\n  set x(v: string|undefined) {\n    this._x = v;\n    this._setCount++;\n  }\n}\ncustomElements.define('live-tester', LiveTester);\n\nsuite('live', () => {\n  let container: HTMLDivElement;\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  suite('properties', () => {\n    test('live() is useful', () => {\n      const go = (x: string) => render(html`<input .value=\"${x}\">}`, container);\n      go('a');\n      const el = container.firstElementChild as HTMLInputElement;\n      el.value = 'b';\n      go('a');\n      assert.equal(el.value, 'b');\n    });\n\n    test('updates an externally set property', () => {\n      const go = (x: string) =>\n          render(html`<input .value=\"${live(x)}\">}`, container);\n      go('a');\n      const el = container.firstElementChild as HTMLInputElement;\n      el.value = 'b';\n      go('a');\n      assert.equal(el.value, 'a');\n    });\n\n    test('does not set a non-changed property', () => {\n      const go = (x: string) =>\n          render(html`<live-tester .x=\"${live(x)}\"></live-tester>}`, container);\n      go('a');\n      const el = container.firstElementChild as LiveTester;\n      assert.equal(el.x, 'a');\n      assert.equal(el._setCount, 1);\n      go('a');\n      assert.equal(el.x, 'a');\n      assert.equal(el._setCount, 1);\n    });\n  });\n\n  suite('attributes', () => {\n    test('updates an externally set attribute', () => {\n      const go = (x: string) =>\n          render(html`<div class=\"${live(x)}\">}`, container);\n      go('a');\n      const el = container.firstElementChild as HTMLDivElement;\n      el.className = 'b'\n      go('a');\n      assert.equal(el.getAttribute('class'), 'a');\n    });\n\n    test('does not set a non-changed attribute', async () => {\n      let mutationCount = 0;\n      const observer = new MutationObserver((records) => {\n        mutationCount += records.length;\n      });\n      const go = (x: string) =>\n          render(html`<div x=\"${live(x)}\"></div>}`, container);\n      go('a');\n      const el = container.firstElementChild as LiveTester;\n      assert.equal(el.getAttribute('x'), 'a');\n\n      observer.observe(el, {attributes: true});\n\n      go('b');\n      await new Promise((resolve) => setTimeout(resolve, 0));\n      assert.equal(el.getAttribute('x'), 'b');\n      assert.equal(mutationCount, 1);\n\n      go('b');\n      await new Promise((resolve) => setTimeout(resolve, 0));\n      assert.equal(el.getAttribute('x'), 'b');\n      assert.equal(mutationCount, 1);\n    });\n  });\n\n  test(\n      'does not set a non-changed attribute with a non-string value',\n      async () => {\n        let mutationCount = 0;\n        const observer = new MutationObserver((records) => {\n          mutationCount += records.length;\n        });\n        const go = (x: number) =>\n            render(html`<div x=\"${live(x)}\"></div>}`, container);\n        go(1);\n        const el = container.firstElementChild as LiveTester;\n        assert.equal(el.getAttribute('x'), '1');\n\n        observer.observe(el, {attributes: true});\n\n        go(2);\n        await new Promise((resolve) => setTimeout(resolve, 0));\n        assert.equal(el.getAttribute('x'), '2');\n        assert.equal(mutationCount, 1);\n\n        go(2);\n        await new Promise((resolve) => setTimeout(resolve, 0));\n        assert.equal(el.getAttribute('x'), '2');\n        assert.equal(mutationCount, 1);\n      });\n\n  suite('boolean attributes', () => {\n    test('updates an externally set boolean attribute', () => {\n      const go = (x: boolean) =>\n          render(html`<div ?hidden=\"${live(x)}\"></div>}`, container);\n\n      go(true);\n      const el = container.firstElementChild as HTMLDivElement;\n      assert.equal(el.getAttribute('hidden'), '');\n\n      go(true);\n      assert.equal(el.getAttribute('hidden'), '');\n\n      el.removeAttribute('hidden');\n      assert.equal(el.getAttribute('hidden'), null);\n\n      go(true);\n      assert.equal(el.getAttribute('hidden'), '');\n    });\n\n    test('does not set a non-changed boolean attribute', async () => {\n      let mutationCount = 0;\n      const observer = new MutationObserver((records) => {\n        mutationCount += records.length;\n      });\n      const go = (x: boolean) =>\n          render(html`<div ?hidden=\"${live(x)}\"></div>}`, container);\n\n      go(true);\n      const el = container.firstElementChild as LiveTester;\n      assert.equal(el.getAttribute('hidden'), '');\n\n      observer.observe(el, {attributes: true});\n\n      go(false);\n      await new Promise((resolve) => setTimeout(resolve, 0));\n      assert.equal(el.getAttribute('hidden'), null);\n      assert.equal(mutationCount, 1);\n\n      go(false);\n      await new Promise((resolve) => setTimeout(resolve, 0));\n      assert.equal(el.getAttribute('hidden'), null);\n      assert.equal(mutationCount, 1);\n    });\n  });\n});\n"]}