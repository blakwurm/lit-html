{"version":3,"file":"guard_test.js","sourceRoot":"","sources":["../../../src/test/directives/guard_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AAEH,sEAAsE;AACtE,qEAAqE;AAErE,OAAO,EAAC,KAAK,EAAC,MAAM,2BAA2B,CAAC;AAChD,OAAO,EAAC,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAC3C,OAAO,EAAC,IAAI,EAAC,MAAM,mBAAmB,CAAC;AACvC,OAAO,EAAC,sBAAsB,EAAC,MAAM,gCAAgC,CAAC;AAEtE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,uDAAuD;AAEvD,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE;IAClB,IAAI,SAAyB,CAAC;IAE9B,SAAS,aAAa,CAAC,KAAU,EAAE,CAAY;QAC7C,MAAM,CAAC,IAAI,CAAA,QAAQ,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,GAAG,EAAE;QACT,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC/C,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,WAAW,GAAG,CAAC,CAAC;QAEpB,MAAM,eAAe,GAAG,GAAG,EAAE;YAC3B,SAAS,IAAI,CAAC,CAAC;YACf,OAAO,IAAI,CAAA,YAAY,WAAW,EAAE,CAAC;QACvC,CAAC,CAAC;QAEF,WAAW,IAAI,CAAC,CAAC;QACjB,aAAa,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,uBAAuB,CAAC,CAAC;QAE1E,WAAW,IAAI,CAAC,CAAC;QACjB,aAAa,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,uBAAuB,CAAC,CAAC;QAE1E,WAAW,IAAI,CAAC,CAAC;QACjB,aAAa,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,uBAAuB,CAAC,CAAC;QAE1E,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,uCAAuC,EAAE,GAAG,EAAE;QACjD,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,WAAW,GAAG,CAAC,CAAC;QAEpB,MAAM,eAAe,GAAG,GAAG,EAAE;YAC3B,SAAS,IAAI,CAAC,CAAC;YACf,OAAO,IAAI,CAAA,GAAG,WAAW,EAAE,CAAC;QAC9B,CAAC,CAAC;QAEF,WAAW,IAAI,CAAC,CAAC;QACjB,aAAa,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;QAC1C,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,cAAc,CAAC,CAAC;QAE1E,WAAW,IAAI,CAAC,CAAC;QACjB,aAAa,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;QAC1C,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,cAAc,CAAC,CAAC;QAE1E,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACrC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAE3B,MAAM,eAAe,GAAG,GAAG,EAAE;YAC3B,SAAS,IAAI,CAAC,CAAC;YACf,OAAO,IAAI,CAAA,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAA,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5D,CAAC,CAAC;QAEF,aAAa,CAAC,CAAC,KAAK,CAAC,EAAE,eAAe,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAC3C,8CAA8C,CAAC,CAAC;QAEpD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClB,aAAa,CAAC,CAAC,KAAK,CAAC,EAAE,eAAe,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAC3C,8CAA8C,CAAC,CAAC;QAEpD,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;QACnB,aAAa,CAAC,CAAC,KAAK,CAAC,EAAE,eAAe,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAC3C,0DAA0D,CAAC,CAAC;QAEhE,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACzC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,MAAM,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAE7B,MAAM,eAAe,GAAG,GAAG,EAAE;YAC3B,SAAS,IAAI,CAAC,CAAC;YACf,OAAO,IAAI,CAAA,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAA,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5D,CAAC,CAAC;QAEF,aAAa,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAC3C,8CAA8C,CAAC,CAAC;QAEpD,aAAa,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,eAAe,CAAC,CAAC;QAC/C,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAC3C,8CAA8C,CAAC,CAAC;QAEpD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClB,aAAa,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CACR,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,EAC3C,0DAA0D,CAAC,CAAC;QAEhE,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport {guard} from '../../directives/guard.js';\nimport {render} from '../../lib/render.js';\nimport {html} from '../../lit-html.js';\nimport {stripExpressionMarkers} from '../test-utils/strip-markers.js';\n\nconst assert = chai.assert;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nsuite('guard', () => {\n  let container: HTMLDivElement;\n\n  function renderGuarded(value: any, f: () => any) {\n    render(html`<div>${guard(value, f)}</div>`, container);\n  }\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  test('re-renders only on identity changes', () => {\n    let callCount = 0;\n    let renderCount = 0;\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`Template ${renderCount}`;\n    };\n\n    renderCount += 1;\n    renderGuarded('foo', guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML), '<div>Template 1</div>');\n\n    renderCount += 1;\n    renderGuarded('foo', guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML), '<div>Template 1</div>');\n\n    renderCount += 1;\n    renderGuarded('bar', guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML), '<div>Template 3</div>');\n\n    assert.equal(callCount, 2);\n  });\n\n  test('renders with undefined the first time', () => {\n    let callCount = 0;\n    let renderCount = 0;\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`${renderCount}`;\n    };\n\n    renderCount += 1;\n    renderGuarded(undefined, guardedTemplate);\n    assert.equal(stripExpressionMarkers(container.innerHTML), '<div>1</div>');\n\n    renderCount += 1;\n    renderGuarded(undefined, guardedTemplate);\n    assert.equal(stripExpressionMarkers(container.innerHTML), '<div>1</div>');\n\n    assert.equal(callCount, 1);\n  });\n\n  test('dirty checks array values', () => {\n    let callCount = 0;\n    let items = ['foo', 'bar'];\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`<ul>${items.map((i) => html`<li>${i}</li>`)}`;\n    };\n\n    renderGuarded([items], guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML),\n        '<div><ul><li>foo</li><li>bar</li></ul></div>');\n\n    items.push('baz');\n    renderGuarded([items], guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML),\n        '<div><ul><li>foo</li><li>bar</li></ul></div>');\n\n    items = [...items];\n    renderGuarded([items], guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML),\n        '<div><ul><li>foo</li><li>bar</li><li>baz</li></ul></div>');\n\n    assert.equal(callCount, 2);\n  });\n\n  test('dirty checks arrays of values', () => {\n    let callCount = 0;\n    const items = ['foo', 'bar'];\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`<ul>${items.map((i) => html`<li>${i}</li>`)}`;\n    };\n\n    renderGuarded(items, guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML),\n        '<div><ul><li>foo</li><li>bar</li></ul></div>');\n\n    renderGuarded(['foo', 'bar'], guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML),\n        '<div><ul><li>foo</li><li>bar</li></ul></div>');\n\n    items.push('baz');\n    renderGuarded(items, guardedTemplate);\n    assert.equal(\n        stripExpressionMarkers(container.innerHTML),\n        '<div><ul><li>foo</li><li>bar</li><li>baz</li></ul></div>');\n\n    assert.equal(callCount, 2);\n  });\n});\n"]}