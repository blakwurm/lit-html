{"version":3,"file":"template_polyfill_test.js","sourceRoot":"","sources":["../../../src/test/polyfills/template_polyfill_test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,2BAA2B,CAAC;AAEjD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,KAAK,CAAC,UAAU,EAAE;IAChB,IAAI,QAA6B,CAAC;IAElC,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC9C,QAAQ,CAAC,SAAS;YACd,MAAM,CAAC,UAAU,CAAC,wCAAwC,CAAC,CAAC;QAChE,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QACxB,MAAM,GAAG,GAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QAC7C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,SAAS,EAAE;QACd,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,8BAA8B,CAAC,CAAC;QAC5E,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;QAC9D,MAAM,CAAC,KAAK,CACR,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAClC,CAAC,EACD,+CAA+C,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CACT,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,kCAAkC,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,UAAU,EAAE;QACf,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QACvE,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACnD,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,wCAAwC,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,WAAW,EAAE;QAChB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,oCAAoC,CAAC;QAC7C,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,UAAW,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC,GAAG,KAAK,CAAC;QACV,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,UAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {policy} from '../test-utils/security.js';\n\nconst assert = chai.assert;\n\nsuite('Template', function() {\n  let template: HTMLTemplateElement;\n\n  suiteSetup(() => {\n    const container = document.createElement('div');\n    document.body.appendChild(container);\n    template = document.createElement('template');\n    template.innerHTML =\n        policy.createHTML('<span id=\"content\">Hello World!</span>');\n    container.appendChild(template);\n  });\n\n  test('No rendering', () => {\n    const bcr = template.getBoundingClientRect();\n    assert.equal(bcr.height, 0);\n  });\n\n  test('content', function() {\n    assert.equal(template.childNodes.length, 0, 'template children evacipated');\n    assert.isDefined(template.content, 'template content exists');\n    assert.equal(\n        template.content.childNodes.length,\n        1,\n        'template content has expected number of nodes');\n    assert.isNull(\n        document.querySelector('#content'), 'template content not in document');\n  });\n\n  test('stamping', function() {\n    document.body.appendChild(document.importNode(template.content, true));\n    const content = document.querySelector('#content');\n    assert.isDefined(content, 'template content stamped into document');\n  });\n\n  test('innerHTML', function() {\n    const imp = document.createElement('template');\n    let s = 'pre<div>Hi</div><div>Bye</div>post';\n    imp.innerHTML = policy.createHTML(s);\n    assert.equal(imp.content.childNodes.length, 4);\n    assert.equal(imp.content.firstChild!.textContent, 'pre');\n    s = 'foo';\n    imp.innerHTML = policy.createHTML(s);\n    assert.equal(imp.content.childNodes.length, 1);\n    assert.equal(imp.content.firstChild!.textContent, s);\n  });\n});\n"]}