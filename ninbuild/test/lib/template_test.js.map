{"version":3,"file":"template_test.js","sourceRoot":"","sources":["../../../src/test/lib/template_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Template} from '../../lib/template.js';\nimport {html, TemplateResult} from '../../lit-html.js';\n\nconst assert = chai.assert;\n\nsuite('Template', () => {\n  test('does not create extra empty text nodes', () => {\n    const countNodes =\n        (result: TemplateResult,\n         getNodes: (f: DocumentFragment) => NodeList) => {\n          const template = new Template(result, result.getTemplateElement());\n          return getNodes(template.element.content).length;\n        };\n\n    assert.equal(\n        countNodes(html`<div>${0}</div>`, (c) => c.childNodes[0].childNodes),\n        2);\n    assert.equal(countNodes(html`${0}`, (c) => c.childNodes), 2);\n    assert.equal(countNodes(html`a${0}`, (c) => c.childNodes), 2);\n    assert.equal(countNodes(html`${0}a`, (c) => c.childNodes), 2);\n    assert.equal(countNodes(html`${0}${0}`, (c) => c.childNodes), 3);\n    assert.equal(countNodes(html`a${0}${0}`, (c) => c.childNodes), 3);\n    assert.equal(countNodes(html`${0}b${0}`, (c) => c.childNodes), 3);\n    assert.equal(countNodes(html`${0}${0}c`, (c) => c.childNodes), 3);\n    assert.equal(countNodes(html`a${0}b${0}c`, (c) => c.childNodes), 3);\n  });\n\n  test('parses parts for multiple expressions', () => {\n    const result = html`\n      <div a=\"${1}\">\n        <p>${2}</p>\n        ${3}\n        <span a=\"${4}\">${5}</span>\n      </div>`;\n    const parts = new Template(result, result.getTemplateElement()).parts;\n    assert.equal(parts.length, 5);\n  });\n\n  test('stores raw names of attributes', () => {\n    const result = html`\n      <div\n        someProp=\"${1}\"\n        a-nother=\"${2}\"\n        multiParts='${3} ${4}'\n        üëç=${5}\n        (a)=${6}\n        [a]=${7}\n        a$=${8}>\n        <p>${9}</p>\n        <div aThing=\"${10}\"></div>\n      </div>`;\n    const template = new Template(result, result.getTemplateElement());\n    const parts = template.parts as Array<{name: string}>;\n    const names = parts.map((p) => p.name);\n    const expectedAttributeNames = [\n      'someProp',\n      'a-nother',\n      'multiParts',\n      'üëç',\n      '(a)',\n      '[a]',\n      'a$',\n      undefined,\n      'aThing'\n    ];\n    assert.deepEqual(names, expectedAttributeNames);\n  });\n});\n"]}