{"version":3,"file":"shady-render_test.js","sourceRoot":"","sources":["../../../src/test/lib/shady-render_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AAEH,OAAO,EAAC,MAAM,IAAI,WAAW,EAAC,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAC,IAAI,EAAC,MAAM,mBAAmB,CAAC;AACvC,OAAO,EAAC,gBAAgB,EAAC,MAAM,8BAA8B,CAAC;AAE9D,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,uDAAuD;AAEvD,KAAK,CAAC,cAAc,EAAE,GAAG,EAAE;IACzB,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC/C,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACpD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,SAAS,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;QACvC,MAAM,MAAM,GAAG,IAAI,CAAA;;;;;;;KAOlB,CAAC;QACF,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACpC,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,UAAW,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzD,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACnE,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACpD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,MAAM,GAAG,IAAI,CAAA;;;;;;;QAOf,IAAI,CAAA;;;;;;;OAOL;KACF,CAAC;QACF,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACpC,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,UAAW,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzD,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,MAAM,IAAI,GAAG,CAAC,SAAS,CAAC,UAAW,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC3D,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,IAAK,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EACnE,KAAK,CAAC,CAAC;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,uCAAuC,EAAE,GAAG,EAAE;QACjD,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACjD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACtC,MAAM,SAAS,GAAG,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAA,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC;QACrE,gBAAgB,CAAC,SAAS,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAC5D,gBAAgB,CAAC,SAAS,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAC5D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAW,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAC1D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAW,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAC1D,gBAAgB,CAAC,SAAS,CAAC,EAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAC/D,gBAAgB,CAAC,SAAS,CAAC,EAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAW,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAC7D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAW,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAC7D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAChD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACzD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,cAAc,GAAG,CAAC,CAAS,EAAE,EAAE;YACnC,MAAM,MAAM,GAAG,IAAI,CAAA;0BACC,CAAC;OACpB,CAAC;YACF,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC;QACF,cAAc,CAAC,GAAG,CAAC,CAAC;QACpB,MAAM,YAAY,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC/D,cAAc,CAAC,GAAG,CAAC,CAAC;QACpB,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,CAAC;QACtE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,0CAA0C,EAAE,GAAG,EAAE;QACpD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACpD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,MAAM,GAAG,IAAI,CAAA;;;;;;;;;;KAUlB,CAAC;QACF,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACpC,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,UAAW,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzD,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,IAAI,CACA,8DAA8D,EAC9D,KAAK,IAAI,EAAE;QACT,MAAM,aAAa,GAAG,IAAI,CAAA;;;;;;;;SAQzB,CAAC;QAEF,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACrD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,MAAM,GAAG,IAAI,CAAA;;;;;;;KAOtB,CAAC;QACE,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,UAAW,CAAC,CAAC,aAAa,CAAC,cAAc,CAAE,CAAC;QACjE,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAC/D,KAAK,CAAC,CAAC;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEP,IAAI,CACA,oFAAoF,EACpF,KAAK,IAAI,EAAE;QACT,MAAM,aAAa,GAAG,IAAI,CAAA;;;;;;;;WAQvB,CAAC;QAEJ,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACrD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,gBAAgB,CACZ,IAAI,CAAA;;;;;;;;SAQP,EACG,SAAS,CAAC,CAAC;QACf,MAAM,QAAQ,GACV,CAAC,SAAS,CAAC,UAAW,CAAC,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;QAC7D,gBAAgB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,gBAAgB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACxB,gBAAgB,CAAC,kBAAkB,CAAC;aACpC,IAAI,EAAE,EACX,KAAK,CAAC,CAAC;QACX,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACxB,gBAAgB,CAAC,kBAAkB,CAAC;aACpC,IAAI,EAAE,EACX,KAAK,CAAC,CAAC;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEP,IAAI,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACxD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACrD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,cAAc,GAChB,CAAC,MAAc,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,EAAE;YAClD,MAAM,MAAM,GAAG,IAAI,CAAA,8BAA8B,CAAC;;;sBAGtC,MAAM;;8BAEE,CAAC;;sBAET,CAAC;;OAEhB,CAAC;YACE,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC;QACN,cAAc,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,SAAS,CAAC,UAAW,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC/D,MAAM,GAAG,GAAG,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACpD,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAChE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAChE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAChE,6BAA6B;QAC7B,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,IAAI,CACA,mFAAmF,EACnF,GAAG,EAAE;QACH,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACrD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,cAAc,GAChB,CAAC,MAAc,EACd,CAAS,EACT,CAAS,EACT,CAAS,EACT,IAAI,GAAG,SAAS,EAAE,EAAE;YACnB,MAAM,MAAM,GAAG,IAAI,CAAA,8BAA8B,CAAC;;;sBAG1C,MAAM;;8BAEE,CAAC;;sBAET,CAAC;;OAEhB,CAAC;YACM,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC;QACN,+BAA+B;QAC/B,cAAc,CACV,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;QACvE,gDAAgD;QAChD,cAAc,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,SAAS,CAAC,UAAW,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC/D,MAAM,GAAG,GAAG,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACpD,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAChE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAChE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAChE,6BAA6B;QAC7B,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEP,IAAI,CAAC,qBAAqB,EAAE;QAC1B,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAC/D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACtC,MAAM,cAAc,GAAG,CAAC,GAAW,EAAE,SAAkB,EAAE,EAAE;YACzD,MAAM,MAAM,GACR,IAAI,CAAA,eAAe,GAAG,oCAAoC,GAAG,QAAQ,CAAC;YAC1E,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC;QACF,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CACR,UAAU,CAAC,UAAW,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,KAAK,CACR,UAAU,CAAC,UAAW,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACpE,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAC/D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACtC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CACR,UAAU,CAAC,UAAW,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,KAAK,CACR,UAAU,CAAC,UAAW,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACpE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,+CAA+C,EAAE;QACpD,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE;YACpE,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,OAAO;SACR;QACD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACpD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,cAAc,GAAG,CAAC,MAAc,EAAE,EAAE;YACxC,MAAM,MAAM,GAAG,IAAI,CAAA;;;sBAGH,MAAM;;;;OAIrB,CAAC;YACF,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC;QACF,cAAc,CAAC,iBAAiB,CAAC,CAAC;QAClC,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,UAAW,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzD,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,cAAc,CAAC,iBAAiB,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CACR,gBAAgB,CAAC,GAAI,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAClE,KAAK,CAAC,CAAC;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,IAAI,CACA,sFAAsF,EACtF,GAAG,EAAE;QACH,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACzD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,UAAU,GAAG,SAAS,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;QAC1D,IAAI,MAAM,GAAG,SAAS,CAAC;QACvB,IAAI;YACD,WAAmB,CAChB,IAAI,CAAA,cAAc,EAAE,UAAU,CAAC,mBAAmB,CAAC,CAAC;SACzD;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,GAAG,CAAC,CAAC;SACZ;QACD,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,qCAAqC,CAAC,CAAC;QACpE,IAAI,MAAM,GAAG,SAAS,CAAC;QACvB,IAAI;YACD,WAAmB,CAAC,IAAI,CAAA,cAAc,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;SACvE;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,GAAG,CAAC,CAAC;SACZ;QACD,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,qCAAqC,CAAC,CAAC;QACpE,IAAI,MAAM,GAAG,SAAS,CAAC;QACvB,IAAI;YACD,WAAmB,CAChB,IAAI,CAAA,cAAc,EAAE,UAAU,EAAE,EAAC,mBAAmB,EAAE,IAAI,EAAC,CAAC,CAAC;SAClE;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,GAAG,CAAC,CAAC;SACZ;QACD,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,qCAAqC,CAAC,CAAC;QACpE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEP,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE;;QACxC,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAC/C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,MAAM,GAAG,CAAC,KAAa,EAAE,EAAE;YAC/B,gBAAgB,CACZ,IAAI,CACJ,gCAAgC,KAAK,6BAA6B,EAClE,EAAE,CAAC,CAAC;QACV,CAAC,CAAC;QACF,MAAM,CAAC,KAAK,CAAC,CAAC;QACd,MAAM,CAAC,KAAK,OAAC,EAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,MAAM,CAAC,CAAC;QACjD,MAAM,CAAC,KAAK,CAAC,CAAC;QACd,MAAM,CAAC,KAAK,OAAC,EAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,MAAM,CAAC,CAAC;QACjD,MAAM,CAAC,EAAE,CAAC,CAAC;QACX,MAAM,CAAC,KAAK,OAAC,EAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,GAAG,CAAC,CAAC;QAC9C,MAAM,CAAC,KAAK,CAAC,CAAC;QACd,MAAM,CAAC,KAAK,OAAC,EAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,MAAM,CAAC,CAAC;QACjD,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,OAAC,EAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,MAAM,CAAC,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,CAAC;QACb,MAAM,CAAC,KAAK,OAAC,EAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACnB,MAAM,CAAC,MAAM,CAAC,CAAC;QACf,MAAM,CAAC,KAAK,OAAC,EAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,OAAO,CAAC,CAAC;QAClD,EAAE,CAAC,WAAW,GAAG,EAAE,CAAC;QACpB,MAAM,CAAC,KAAK,OAAC,EAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,OAAO,CAAC,CAAC;QAClD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {render as shadyRender} from '../../lib/shady-render.js';\nimport {html} from '../../lit-html.js';\nimport {renderShadowRoot} from '../test-utils/shadow-root.js';\n\nconst assert = chai.assert;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nsuite('shady-render', () => {\n  test('style elements apply in shadowRoots', () => {\n    const container = document.createElement('scope-1');\n    document.body.appendChild(container);\n    container.attachShadow({mode: 'open'});\n    const result = html`\n      <style>\n        div {\n          border: 2px solid blue;\n        }\n      </style>\n      <div>Testing...</div>\n    `;\n    renderShadowRoot(result, container);\n    const div = (container.shadowRoot!).querySelector('div');\n    assert.equal(\n        getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n        '2px');\n    document.body.removeChild(container);\n  });\n\n  test('style elements apply in shadowRoots in nested templates', () => {\n    const container = document.createElement('scope-2');\n    document.body.appendChild(container);\n    const result = html`\n      <style>\n        div {\n          border: 4px solid orange;\n        }\n      </style>\n      <div>Testing...</div>\n      ${html`\n        <style>\n          span {\n            border: 5px solid tomato;\n          }\n        </style>\n        <span>Testing...</span>\n      `}\n    `;\n    renderShadowRoot(result, container);\n    const div = (container.shadowRoot!).querySelector('div');\n    assert.equal(\n        getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n        '4px');\n    const span = (container.shadowRoot!).querySelector('span');\n    assert.equal(\n        getComputedStyle(span!).getPropertyValue('border-top-width').trim(),\n        '5px');\n    document.body.removeChild(container);\n  });\n\n  test('results render to multiple containers', () => {\n    const container1 = document.createElement('div');\n    const container2 = document.createElement('div');\n    document.body.appendChild(container1);\n    document.body.appendChild(container2);\n    const getResult = (data: any) => html`${data.a}-${data.b}-${data.c}`;\n    renderShadowRoot(getResult({a: 1, b: 2, c: 3}), container1);\n    renderShadowRoot(getResult({a: 4, b: 5, c: 6}), container2);\n    assert.equal(container1.shadowRoot!.textContent, '1-2-3');\n    assert.equal(container2.shadowRoot!.textContent, '4-5-6');\n    renderShadowRoot(getResult({a: 11, b: 22, c: 33}), container1);\n    renderShadowRoot(getResult({a: 44, b: 55, c: 66}), container2);\n    assert.equal(container1.shadowRoot!.textContent, '11-22-33');\n    assert.equal(container2.shadowRoot!.textContent, '44-55-66');\n    document.body.removeChild(container1);\n    document.body.removeChild(container2);\n  });\n\n  test('multiple renders re-use rendered DOM', () => {\n    const container = document.createElement('scope-re-use');\n    document.body.appendChild(container);\n    const renderTemplate = (a: string) => {\n      const result = html`\n            <div id=\"a\">${a}</div>\n      `;\n      renderShadowRoot(result, container);\n    };\n    renderTemplate('a');\n    const renderedNode = container.shadowRoot!.querySelector('#a');\n    renderTemplate('b');\n    assert.equal(container.shadowRoot!.querySelector('#a'), renderedNode);\n    document.body.removeChild(container);\n  });\n\n  test('styles with css custom properties render', () => {\n    const container = document.createElement('scope-4');\n    document.body.appendChild(container);\n    const result = html`\n      <style>\n        :host {\n          --border: 2px solid orange;\n        }\n        div {\n          border: var(--border);\n        }\n      </style>\n      <div>Testing...</div>\n    `;\n    renderShadowRoot(result, container);\n    const div = (container.shadowRoot!).querySelector('div');\n    assert.equal(\n        getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n        '2px');\n    document.body.removeChild(container);\n  });\n\n  test(\n      'styles with css custom properties flow to nested shadowRoots',\n      async () => {\n        const shadowContent = html`\n          <style>\n            :host {\n              display: block;\n              border: var(--border);\n            }\n          </style>\n          <div>Testing...</div>\n        `;\n\n        const container = document.createElement('scope-4a');\n        document.body.appendChild(container);\n        const result = html`\n      <style>\n        :host {\n          --border: 2px solid orange;\n        }\n      </style>\n      <scope-4a-sub></scope-4a-sub>\n    `;\n        renderShadowRoot(result, container);\n        const e = (container.shadowRoot!).querySelector('scope-4a-sub')!;\n        renderShadowRoot(shadowContent, e);\n        assert.equal(\n            getComputedStyle(e).getPropertyValue('border-top-width').trim(),\n            '2px');\n        document.body.removeChild(container);\n      });\n\n  test(\n      'styles with css custom properties flow to multiple instances of nested shadowRoots',\n      async () => {\n        const nestedContent = html`\n            <style>\n              :host {\n                display: block;\n                border: var(--border);\n              }\n            </style>\n            <div>Testing...</div>\n          `;\n\n        const container = document.createElement('scope-4b');\n        document.body.appendChild(container);\n        renderShadowRoot(\n            html`\n          <style>\n            :host {\n              --border: 2px solid orange;\n            }\n          </style>\n          <scope-4b-sub></scope-4b-sub>\n          <scope-4b-sub></scope-4b-sub>\n        `,\n            container);\n        const elements =\n            (container.shadowRoot!).querySelectorAll('scope-4b-sub');\n        renderShadowRoot(nestedContent, elements[0]);\n        renderShadowRoot(nestedContent, elements[1]);\n        assert.equal(\n            getComputedStyle(elements[0])\n                .getPropertyValue('border-top-width')\n                .trim(),\n            '2px');\n        assert.equal(\n            getComputedStyle(elements[1])\n                .getPropertyValue('border-top-width')\n                .trim(),\n            '2px');\n        document.body.removeChild(container);\n      });\n\n  test('parts around styles with parts render/update', () => {\n    const container = document.createElement('scope-3a');\n    document.body.appendChild(container);\n    const renderTemplate =\n        (border: string, a: string, b: string, c: string) => {\n          const result = html`<style></style><div id=\"a\">${a}</div>\n        <style>\n          div {\n            border: ${border};\n          }\n        </style><div id=\"b\">${b}</div>\n        <style></style>\n        <div id=\"c\">${c}</div>\n        <style></style>\n      `;\n          renderShadowRoot(result, container);\n        };\n    renderTemplate('1px solid black', 'a', 'b', 'c');\n    const shadowRoot = container.shadowRoot!;\n    assert.equal(shadowRoot.querySelector('#a')!.textContent, `a`);\n    assert.equal(shadowRoot.querySelector('#b')!.textContent, `b`);\n    assert.equal(shadowRoot.querySelector('#c')!.textContent, `c`);\n    const div = shadowRoot.querySelector('div');\n    assert.equal(\n        getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n        '1px');\n    renderTemplate('2px solid black', 'a1', 'b1', 'c1');\n    assert.equal(shadowRoot.querySelector('#a')!.textContent, `a1`);\n    assert.equal(shadowRoot.querySelector('#b')!.textContent, `b1`);\n    assert.equal(shadowRoot.querySelector('#c')!.textContent, `c1`);\n    // Style parts do not update.\n    assert.equal(\n        getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n        '1px');\n    document.body.removeChild(container);\n  });\n\n  test(\n      'parts around styles with parts render/update when stamped into muliple containers',\n      () => {\n        const container = document.createElement('scope-3b');\n        document.body.appendChild(container);\n        const renderTemplate =\n            (border: string,\n             a: string,\n             b: string,\n             c: string,\n             host = container) => {\n              const result = html`<style></style><div id=\"a\">${a}</div>\n        <style>\n          div {\n            border: ${border};\n          }\n        </style><div id=\"b\">${b}</div>\n        <style></style>\n        <div id=\"c\">${c}</div>\n        <style></style>\n      `;\n              renderShadowRoot(result, host);\n            };\n        // create a dummy element first\n        renderTemplate(\n            '1px solid black', '', '', '', document.createElement('scope-3b'));\n        // then test the 2nd element made for this scope\n        renderTemplate('1px solid black', 'a', 'b', 'c');\n        const shadowRoot = container.shadowRoot!;\n        assert.equal(shadowRoot.querySelector('#a')!.textContent, `a`);\n        assert.equal(shadowRoot.querySelector('#b')!.textContent, `b`);\n        assert.equal(shadowRoot.querySelector('#c')!.textContent, `c`);\n        const div = shadowRoot.querySelector('div');\n        assert.equal(\n            getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n            '1px');\n        renderTemplate('2px solid black', 'a1', 'b1', 'c1');\n        assert.equal(shadowRoot.querySelector('#a')!.textContent, `a1`);\n        assert.equal(shadowRoot.querySelector('#b')!.textContent, `b1`);\n        assert.equal(shadowRoot.querySelector('#c')!.textContent, `c1`);\n        // Style parts do not update.\n        assert.equal(\n            getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n            '1px');\n        document.body.removeChild(container);\n      });\n\n  test('empty styles are ok', function() {\n    const container1 = document.createElement('scope-empty-style');\n    document.body.appendChild(container1);\n    const renderTemplate = (foo: string, container: Element) => {\n      const result =\n          html`<div id=\"a\">${foo}</div><style></style><div id=\"b\">${foo}</div>`;\n      renderShadowRoot(result, container);\n    };\n    renderTemplate('foo', container1);\n    assert.equal(\n        container1.shadowRoot!.querySelector('#a')!.textContent, `foo`);\n    assert.equal(\n        container1.shadowRoot!.querySelector('#b')!.textContent, `foo`);\n    const container2 = document.createElement('scope-empty-style');\n    document.body.appendChild(container2);\n    renderTemplate('bar', container2);\n    assert.equal(\n        container2.shadowRoot!.querySelector('#a')!.textContent, `bar`);\n    assert.equal(\n        container2.shadowRoot!.querySelector('#b')!.textContent, `bar`);\n    document.body.removeChild(container1);\n    document.body.removeChild(container2);\n  });\n\n  test('part values render into styles once per scope', function() {\n    if (typeof window.ShadyDOM === 'undefined' || !window.ShadyDOM.inUse) {\n      this.skip();\n      return;\n    }\n    const container = document.createElement('scope-3');\n    document.body.appendChild(container);\n    const renderTemplate = (border: string) => {\n      const result = html`\n        <style>\n          div {\n            border: ${border};\n          }\n        </style>\n        <div>Testing...</div>\n      `;\n      renderShadowRoot(result, container);\n    };\n    renderTemplate('1px solid black');\n    const div = (container.shadowRoot!).querySelector('div');\n    assert.equal(\n        getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n        '1px');\n    renderTemplate('2px solid black');\n    assert.equal(\n        getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n        '1px');\n    document.body.removeChild(container);\n  });\n\n  test(\n      'throws an error if the options argument is not an object with a `scopeName` property',\n      () => {\n        const container = document.createElement('some-element');\n        document.body.appendChild(container);\n        const shadowRoot = container.attachShadow({mode: 'open'});\n        let error1 = undefined;\n        try {\n          (shadyRender as any)(\n              html`some content`, shadowRoot /*, not provided */);\n        } catch (e) {\n          error1 = e;\n        }\n        assert.notEqual(error1, undefined);\n        assert.equal(error1.message, 'The `scopeName` option is required.');\n        let error2 = undefined;\n        try {\n          (shadyRender as any)(html`some content`, shadowRoot, 'not an object');\n        } catch (e) {\n          error2 = e;\n        }\n        assert.notEqual(error2, undefined);\n        assert.equal(error2.message, 'The `scopeName` option is required.');\n        let error3 = undefined;\n        try {\n          (shadyRender as any)(\n              html`some content`, shadowRoot, {'missing scopeName': true});\n        } catch (e) {\n          error3 = e;\n        }\n        assert.notEqual(error3, undefined);\n        assert.equal(error3.message, 'The `scopeName` option is required.');\n        document.body.removeChild(container);\n      });\n\n  test('parts around <slot> elemnets', () => {\n    const el = document.createElement('slot-host');\n    document.body.appendChild(el);\n    const render = (title: string) => {\n      renderShadowRoot(\n          html\n          `<slot name=\"before\" > </slot>${title}<slot name=\"after\"></slot >`,\n          el);\n    };\n    render('foo');\n    assert.equal(el.shadowRoot?.textContent, ' foo');\n    render('bar');\n    assert.equal(el.shadowRoot?.textContent, ' bar');\n    render('');\n    assert.equal(el.shadowRoot?.textContent, ' ');\n    render('zot');\n    assert.equal(el.shadowRoot?.textContent, ' zot');\n    const c1 = document.createElement('div');\n    c1.setAttribute('slot', 'before');\n    el.appendChild(c1);\n    assert.equal(el.shadowRoot?.textContent, ' zot');\n    render('c1');\n    assert.equal(el.shadowRoot?.textContent, ' c1');\n    const c2 = document.createElement('div');\n    c2.setAttribute('slot', 'after');\n    el.appendChild(c2);\n    render('c1c2');\n    assert.equal(el.shadowRoot?.textContent, ' c1c2');\n    el.textContent = '';\n    assert.equal(el.shadowRoot?.textContent, ' c1c2');\n    document.body.removeChild(el);\n  });\n});\n"]}