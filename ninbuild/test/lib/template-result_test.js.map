{"version":3,"file":"template-result_test.js","sourceRoot":"","sources":["../../../src/test/lib/template-result_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AAEH,OAAO,EAAC,MAAM,EAAC,MAAM,uBAAuB,CAAC;AAC7C,OAAO,EAAC,IAAI,EAAC,MAAM,mBAAmB,CAAC;AAEvC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,KAAK,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC3B,IAAI,CAAC,0CAA0C,EAAE,GAAG,EAAE;QACpD,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAA,EAAE,CAAC;QACvB,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC9C,MAAM,GAAG,GAAG,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACxC,MAAM,YAAY,GAAG,IAAI,CAAA,sBAAsB,KAAK,UAAU,CAAC,OAAO,EAAE,CAAC;QACzE,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,2BAA2B,MAAM,UAAU,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {marker} from '../../lib/template.js';\nimport {html} from '../../lit-html.js';\n\nconst assert = chai.assert;\n\nsuite('TemplateResult', () => {\n  test('strings are identical for multiple calls', () => {\n    const t = () => html``;\n    assert.strictEqual(t().strings, t().strings);\n  });\n\n  test('values contain interpolated values', () => {\n    const foo = 'foo', bar = 1;\n    assert.deepEqual(html`${foo}${bar}`.values, [foo, bar]);\n  });\n\n  test('style attributes are renamed', () => {\n    const templateHTML = html`<div style=\"color: ${'red'}\"></div>`.getHTML();\n    assert.equal(templateHTML, `<div style$lit$=\"color: ${marker}\"></div>`);\n  });\n});\n"]}